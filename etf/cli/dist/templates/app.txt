import * as bodyParser from "body-parser";
import * as express from "express";
import * as swaggerUi from "swagger-ui-express";
import * as fs from "fs";
import "dotenv/config";
import { UserManagementApi } from "./src/modules/user-management/user-management.api";
import { connect } from "./db.config";
import cors from "./src/middlewares/cors";
import { ValidateToken } from "./src/middlewares/validateToken";

class App {
  express: express.Application;
  db: any = {};
  userManagement: any;
  swaggerOptions = {
    explorer: true,
  };
  /* Swagger files start
  private swaggerFile: any = "./swagger/swagger.json";
  private swaggerData: any = fs.readFileSync(this.swaggerFile, "utf8");
  private customCss: any = fs.readFileSync(
    process.cwd() + "/swagger/swagger.css",
    "utf8"
  );
  private swaggerDocument = JSON.parse(this.swaggerData || "{}");
  Swagger files end */
  private baseApiServerPath = "/api";
  constructor() {
    this.db = connect();
    this.db.sequelize.sync({ force: false, alter: true }).then(() => {
      console.log("DROP and RE-SYNC db.");
    });
    this.express = express();
    this.userManagement = new UserManagementApi(this.db, new ValidateToken());
    this.middleware();
    this.routes();
  }
  private middleware(): void {
    this.express.use(bodyParser.json());
    this.express.use(bodyParser.urlencoded({ extended: false }));
    this.express.use(cors.mount());
  }
  private routes(): void {
    this.express.use(
      this.baseApiServerPath + "/users",
      this.userManagement.router
    );
    /* swagger docs
    this.express.use(
      "/api/docs",
      swaggerUi.serve,
      swaggerUi.setup(
        this.swaggerDocument,
        undefined,
        this.swaggerOptions,
        this.customCss
      )
    );*/
    //this.express.get(this.baseApiServerPath + "/", (req, res, next) => {
    //  res.send("ERP Server Running!!");
    //});
    // handle undefined routes
    this.express.use("*", (req, res, next) => {
      res.send("Make sure url is correct!!!");
    });
  }
}

export default new App().express;
